!(function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@sibley/app-component")):"function"==typeof define&&define.amd?define(["exports","@sibley/app-component"],t):t((e=e||self).index={},e.AppComponent)})(this,function(e,t){"use strict";var i='<style> @import url("./css/reset.css");\n  @import url("./css/variables.css");\n  @import url("./css/typography.css");\n\n  :host {\n    padding: 0 1.5em 1.5em 1.5em;\n  }\n\n  .header {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0px;\n    background-color: var(--palette-white);\n    padding: 1em;\n  }\n\n  [data-element=views] {\n    display: grid;\n    grid-template-columns: 33% 33% 33%;\n  } </style> <h1 class="header">{{title}}</h1> <div>The current time is <span>{{trackTime}}</span></div> <in-radio data-element="views" in-name="view" choices=\'["default","filter","details"]\'></in-radio> <slot></slot> <slot name="filter" hidden></slot> <slot name="details" hidden></slot> <div>Last refresh: {{renderTime}}</div> ';class n extends t.AppComponent{constructor(){super(),t.AppComponent.init(this,n,i),this.data.renderTime=function(){return new Date};var e=function(){this.data.trackTime=this.data.renderTime()}.bind(this);setInterval(e,1e3)}get eventListeners(){return[["attributechange","in-radio",function(e){this.switchTab(this.$views.getAttribute("choice"))}.bind(this)]]}switchTab(e){e===this.$views.getAttribute("choice")?this.shadowRoot.querySelectorAll("slot").forEach(t=>{"default"===e&&!t.getAttribute("name")||t.getAttribute("name")===e?t.hidden=!1:t.hidden=!0}):this.$views.setAttribute("choice",e)}static get observedAttributes(){return["title"]}}window.customElements.define("app-sidebar",n);const s=function(){return"_"+Math.random().toString(36).substr(2,9)};var o='<template data-element="choiceTpl"> <div class="choice"><input type="radio" name="{{name}}" id="{{id}}" value="{{choice}}"><label for="{{id}}">{{choice}}</label></div> </template> ';class a extends t.AppComponent{constructor(){super(),t.AppComponent.init(this,a,o),this.observedAttributes.choices.push(this.renderChoices.bind(this)),this.observedAttributes.choice.push(function(e,t){this.setAttribute(e,this.serializeAttribute(t));const i=this.shadowRoot.querySelector("[value="+this.data.choice+"]");i&&(i.checked=!0)}.bind(this)),this.on("attributechange",function(){this.dispatchEvent(new CustomEvent("attributechange",{bubbles:!0,cancelable:!0}))}.bind(this))}get eventListeners(){return[["click","input",function(e){const t=this.shadowRoot.querySelector(":checked");this.data.choice=t.getAttribute("value")}.bind(this)]]}renderChoices(){const e=this.shadowRoot,i=this.$choiceTpl,n=this.data["in-name"],o=this.data.choices;if(!(e&&i&&n&&o))return;e.querySelectorAll(".choice").forEach(e=>{e.remove()});let a=!1;for(let r of o){let o=t.AppComponent.stashe(i.content.cloneNode(!0)),c={};c.id=s(),c.name=n,c.choice=r;let d=o(c),l=d.querySelector("input");a||(l.checked=!0,a=!0,this.data.choice=r),e.appendChild(d)}}static get observedAttributes(){return["in-name","choices","choice"]}}window.customElements.define("in-radio",a);var r='<style> @import url("./css/reset.css");\n  @import url("./css/variables.css");\n  @import url("./css/typography.css");\n\n  [data-element="table"] {\n    display: grid;\n    grid-template-columns: 30% 70%;\n    grid-gap: 0.5em;\n  }\n\n  td {\n    padding: 0.5em;\n  }\n\n  .label {\n    background-color: var(--palette-dark);\n    font-weight: var(--font-weight-bold);\n  }\n\n  .detail {\n    background-color: var(--palette-light);\n  } </style> <h1>{{siteinfo.County}} County Spring #{{siteinfo.SpringID}}</h1> <template data-element="rowTpl"> <td class="label"><label for="{{id}}">{{key}}</label></td><td class="detail"><span id="{{id}}">{{value}}</span></td> </template> <div data-element="table"></div>';class c extends t.AppComponent{constructor(){super(),t.AppComponent.init(this,c,r),this.observedAttributes.siteinfo.push(this.renderTable.bind(this))}static get observedAttributes(){return["siteinfo"]}renderTable(){const e=this.$table,i=this.$rowTpl;if(e&&i&&this.data.siteinfo){e.querySelectorAll("*").forEach(e=>{e.remove()});for(const[n,o]of Object.entries(this.data.siteinfo)){let a=t.AppComponent.stashe(i.content.cloneNode(!0)),r={};r.id=s(),r.key=n,r.value=o;let c=a(r);e.appendChild(c)}}}}window.customElements.define("site-details",c),e.AppSidebar=n,e.InRadio=a,e.SiteDetails=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=index.min.js.map
