{"version":3,"file":"index.min.js","sources":["../../lit/gen-id.js","../../lit/app-sidebar.js","../../lit/in-radio.js","../../lit/site-details.js"],"sourcesContent":["// https://gist.github.com/gordonbrander/2230317\nexport const genId = function() {\n  return '_' + Math.random().toString(36).substr(2, 9);\n}","import { LitElement, html, css } from 'lit-element';\nimport { InRadio } from './in-radio.js';\n\nfunction renderTime() {\n  return new Date();\n}\n\nexport class AppSidebar extends LitElement {\n  static get properties() {\n    return {\n      title: {\n        type: String\n      },\n      trackTime: {\n        type: Date,\n        attribute: false\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.renderTime = renderTime();\n    \n    let track = (function() {\n      this.trackTime = renderTime();\n    }).bind(this);\n    setInterval(track, 1000);\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        padding: 0 1.5em 1.5em 1.5em;\n      }\n\n      .header {\n        position: -webkit-sticky;\n        position: sticky;\n        top: 0px;\n        background-color: var(--palette-white);\n        padding: 1em;\n      }\n\n      [data-element=views] {\n        display: grid;\n        grid-template-columns: 33% 33% 33%;\n      }\n    `;\n  }\n\n  switchTab(choice) {\n    if (choice !== this.$views.choice) {\n      this.$views.choice = choice;\n    }\n    this.shadowRoot.querySelectorAll('slot').forEach((el) => {\n      if ((choice === 'default' && !el.getAttribute('name')) || (el.getAttribute('name') === choice)) {\n        el.hidden = false;\n      } else {\n        el.hidden = true;\n      }\n    });\n  }\n\n  handleChoiceChange(e) {\n    this.switchTab(e.detail.choice);\n  }\n\n  render() {\n    return html`\n      <style>\n        @import url(\"./css/typography.css\");\n      </style>\n\n      <h1 class=\"header\">${this.title}</h1>\n      <div>The current time is <span>${this.trackTime}</span></div>\n      <in-radio\n        data-element=\"views\"\n        in-name=\"view\"\n        choices='[\"default\",\"filter\",\"details\"]'\n        @choice-change=\"${this.handleChoiceChange}\"\n      ></in-radio>\n      <slot></slot>\n      <slot name=\"filter\" hidden></slot>\n      <slot name=\"details\" hidden></slot>\n      <div>Last refresh: ${this.renderTime}</div>\n    `;\n  }\n\n  firstUpdated() {\n    Object.assign(this, gatherElements(this.renderRoot, 'data-element'));\n  }\n}\n\nfunction gatherElements(doc, attributeName) {\n  let result = {};\n  let elements = doc.querySelectorAll('[' + attributeName + ']');\n  for (let el of elements) {\n    let name = '$' + el.getAttribute(attributeName);\n    result[name] = el;\n  }\n  return result;\n};\n\ncustomElements.define('app-sidebar', AppSidebar);","import { LitElement, html, css } from 'lit-element';\nimport { genId } from './gen-id.js';\n\n\nexport class InRadio extends LitElement {\n  static get properties() {\n    return {\n      inName: {\n        type: String,\n        attribute: 'in-name'\n      },\n      choices: {\n        type: Array\n      },\n      choice: {\n        type: String,\n        reflect: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.checked = [];\n    this.genId = (function() {\n      const memo = {};\n      return function(index) {\n        if (!memo[index]) {\n          memo[index] = genId();\n        }\n        return memo[index];\n      }\n    })();\n  }\n\n  firstUpdated() {\n    if (!this.choice && this.choices) {\n      this.choice = this.choices[0];\n    }\n  }\n\n  inChange(e) {\n    this.choice = e.target.value;\n\n    let event = new CustomEvent('choice-change', {\n      detail: {\n        choice: this.choice\n      }\n    });\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return html`\n      ${this.choices.map((item, index) => html`\n        <div class=\"choice\">\n          <input \n            type=\"radio\" \n            name=\"${this.inName}\" \n            id=\"${this.genId(index)}\" \n            value=\"${item}\" \n            .checked=\"${(this.choice === item)}\" \n            @change=\"${this.inChange}\"\n          >\n          <label for=\"${this.genId(index)}\">${item}</label>\n        </div>\n      `)}\n    `;\n  }\n}\ncustomElements.define('in-radio', InRadio);","import { LitElement, html, css } from 'lit-element';\nimport { genId } from './gen-id.js';\n\nexport class SiteDetails extends LitElement {\n  static get properties() {\n    return {\n      siteinfo: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.genId = (function() {\n      const memo = {};\n      return function(index) {\n        if (!memo[index]) {\n          memo[index] = genId();\n        }\n        return memo[index];\n      }\n    })();\n  }\n\n  static get styles() {\n    return css`\n      [data-element=\"table\"] {\n        display: grid;\n        grid-template-columns: 30% 70%;\n        grid-gap: 0.5em;\n      }\n\n      td {\n        padding: 0.5em;\n      }\n\n      .label {\n        background-color: var(--palette-dark);\n        font-weight: var(--font-weight-bold);\n      }\n\n      .detail {\n        background-color: var(--palette-light);\n      }\n    `;\n  }\n\n  render() {\n    return html`\n      <style>\n        @import url(\"./css/typography.css\");\n      </style>\n\n      ${(!this.siteinfo)? '' : html`\n        <h1>${this.siteinfo.County} County Spring #${this.siteinfo.SpringID}</h1>\n        <div data-element=\"table\">\n          ${Object.entries(this.siteinfo).map((el, index) => html`\n            <td class=\"label\">\n              <label for=\"${this.genId(index)}\">${el[0]}</label>\n            </td>\n            <td class=\"detail\">\n              <span id=\"${this.genId(index)}\">${el[1]}</span>\n            </td>\n          `)}\n        </div>\n      `}\n    `;\n  }\n}\ncustomElements.define('site-details', SiteDetails);"],"names":["genId","Math","random","toString","substr","renderTime","Date","customElements","define","LitElement","properties","inName","type","String","attribute","choices","Array","choice","reflect","[object Object]","super","this","checked","memo","index","e","target","value","event","CustomEvent","detail","dispatchEvent","html","map","item","inChange","AppSidebar","title","trackTime","track","bind","setInterval","styles","css","$views","shadowRoot","querySelectorAll","forEach","el","getAttribute","hidden","switchTab","handleChoiceChange","Object","assign","doc","attributeName","result","elements","name","gatherElements","renderRoot","SiteDetails","siteinfo","County","SpringID","entries"],"mappings":"oPACO,MAAMA,EAAQ,WACnB,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,aCC3CC,IACP,OAAO,IAAIC,KCkEbC,eAAeC,OAAO,yBAlEOC,aAC3BC,wBACE,OACEC,QACEC,KAAMC,OACNC,UAAW,WAEbC,SACEH,KAAMI,OAERC,QACEL,KAAMC,OACNK,SAAS,IAKfC,cACEC,QACAC,KAAKC,WACLD,KAAKrB,OAAQ,WACX,MAAMuB,KACN,OAAO,SAASC,GAId,OAHKD,EAAKC,KACRD,EAAKC,GAASxB,KAETuB,EAAKC,KANH,GAWfL,gBACOE,KAAKJ,QAAUI,KAAKN,UACvBM,KAAKJ,OAASI,KAAKN,QAAQ,IAI/BI,SAASM,GACPJ,KAAKJ,OAASQ,EAAEC,OAAOC,MAEvB,IAAIC,EAAQ,IAAIC,YAAY,iBAC1BC,QACEb,OAAQI,KAAKJ,UAGjBI,KAAKU,cAAcH,GAGrBT,SACE,OAAOa;QACHX,KAAKN,QAAQkB,IAAI,CAACC,EAAMV,IAAUQ;;;;oBAItBX,KAAKV;kBACPU,KAAKrB,MAAMwB;qBACRU;wBACIb,KAAKJ,SAAWiB;uBAClBb,KAAKc;;wBAEJd,KAAKrB,MAAMwB,OAAWU;;;eDzDjCE,UAAmB3B,aAC9BC,wBACE,OACE2B,OACEzB,KAAMC,QAERyB,WACE1B,KAAMN,KACNQ,WAAW,IAKjBK,cACEC,QACAC,KAAKhB,WAAaA,IAElB,IAAIkC,EAAQ,WACVlB,KAAKiB,UAAYjC,KAChBmC,KAAKnB,MACRoB,YAAYF,EAAO,KAGrBG,oBACE,OAAOC;;;;;;;;;;;;;;;;;MAoBTxB,UAAUF,GACJA,IAAWI,KAAKuB,OAAO3B,SACzBI,KAAKuB,OAAO3B,OAASA,GAEvBI,KAAKwB,WAAWC,iBAAiB,QAAQC,QAASC,IAChC,YAAX/B,IAAyB+B,EAAGC,aAAa,SAAaD,EAAGC,aAAa,UAAYhC,EACrF+B,EAAGE,QAAS,EAEZF,EAAGE,QAAS,IAKlB/B,mBAAmBM,GACjBJ,KAAK8B,UAAU1B,EAAEK,OAAOb,QAG1BE,SACE,OAAOa;;;;;2BAKgBX,KAAKgB;uCACOhB,KAAKiB;;;;;0BAKlBjB,KAAK+B;;;;;2BAKJ/B,KAAKhB;MAI9Bc,eACEkC,OAAOC,OAAOjC,MAIlB,SAAwBkC,EAAKC,GAC3B,IAAIC,KACAC,EAAWH,EAAIT,iBAAiB,IAAMU,EAAgB,KAC1D,IAAK,IAAIR,KAAMU,EAAU,CACvB,IAAIC,EAAO,IAAMX,EAAGC,aAAaO,GACjCC,EAAOE,GAAQX,EAEjB,OAAOS,GAXeG,CAAevC,KAAKwC,WAAY,kBAcxDtD,eAAeC,OAAO,cAAe4B,SErGxB0B,UAAoBrD,aAC/BC,wBACE,OACEqD,UACEnD,KAAMyC,SAKZlC,cACEC,QACAC,KAAKrB,OAAQ,WACX,MAAMuB,KACN,OAAO,SAASC,GAId,OAHKD,EAAKC,KACRD,EAAKC,GAASxB,KAETuB,EAAKC,KANH,GAWfkB,oBACE,OAAOC;;;;;;;;;;;;;;;;;;;MAsBTxB,SACE,OAAOa;;;;;QAKDX,KAAK0C,SAAgB/B;cACjBX,KAAK0C,SAASC,yBAAyB3C,KAAK0C,SAASE;;YAEvDZ,OAAOa,QAAQ7C,KAAK0C,UAAU9B,IAAI,CAACe,EAAIxB,IAAUQ;;4BAEjCX,KAAKrB,MAAMwB,OAAWwB,EAAG;;;0BAG3B3B,KAAKrB,MAAMwB,OAAWwB,EAAG;;;;QARzB;OAgB1BzC,eAAeC,OAAO,eAAgBsD"}